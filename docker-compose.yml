version: "3"
services:
  common:
    image: pith-api_common:latest
    build:
      context: .
      dockerfile: ./dockerfiles/common.Dockerfile
  app:
    build:
      context: .
      dockerfile: ./dockerfiles/app.Dockerfile
    depends_on:
      - common
      - mongo
      - redis
    ports:
      - "8080:8080"
    environment:
      MONGODB_CONN: ${MONGO}
      MONGODB_NAME: ${MONGO_NAME}
      REDIS_IP: ${REDIS}
    working_dir: /api
    volumes:
      - ./backend/src:/api:cached
  worker:
    build:
      context: .
      dockerfile: ./dockerfiles/worker.Dockerfile
    depends_on:
      - app
      - common
      - mongo
      - redis
    environment:
      MONGODB_CONN: ${MONGO}
      MONGODB_NAME: ${MONGO_NAME}
      REDIS_IP: ${REDIS}
      AWS_ACCESS_KEY: ${AWS_WORKER_ACCESS_KEY}
      AWS_SECRET: ${AWS_WORKER_SECRET_KEY}
    working_dir: /api
    volumes:
      - ./backend/src:/api:cached
  static:
    build:
      context: .
      dockerfile: ./dockerfiles/static.Dockerfile
    depends_on:
      - app
    working_dir: /static
    ports:
      - "3000:3000"
    stdin_open: true
    environment:
      REACT_APP_BACKEND_HOST: ${HOST_NAME}
      REACT_APP_BACKEND_PORT: ${HOST_PORT}
    volumes:
      - ./frontend/src:/static/src:cached
  redis:
    image: "redis:alpine"
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
  tests:
    build:
      context: .
      dockerfile: ./dockerfiles/tests.Dockerfile
    depends_on:
      - common
      - app
      - worker
      - mongo
      - redis
    ports:
      - "1234:1234"
    environment:
      MONGODB_CONN: ${MONGO}
      MONGODB_NAME: ${MONGO_NAME}
      REDIS_IP: ${REDIS}
    working_dir: /api
    volumes:
      - ./backend/src:/api:cached

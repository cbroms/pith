global
        # log /dev/log    local0
        # log /dev/log    local1 notice
        # chroot /var/lib/haproxy
        # stats socket /run/haproxy/admin.sock mode 660 level admin
        # stats timeout 30s
        daemon

        # Default SSL material locations
        # ca-base /etc/ssl/certs
        # crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        # ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000

frontend local
    bind *:80
    mode http
    default_backend socketio

backend socketio
    mode http
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    # getting a page from the socketio server will result in a 404, so expect that result when 
    # doing a health check
    http-check expect status 404
    # we're using sticky sessions so that each client is connected to the same backend
    # instance. This is required by socketio (See https://python-socketio.readthedocs.io/en/latest/server.html#scalability-notes)
    # note that there are by default two instances, but this can be scaled up as needed 
    cookie SERVERID insert indirect nocache
    server app01 127.0.0.1:5000 check cookie app01
    server app02 127.0.0.1:5001 check cookie app02
    # add more server instances here (up to 12 total)

# listen stats *:1936
#     stats enable
#     stats uri /
#     stats hide-version
#     stats auth someuser:password
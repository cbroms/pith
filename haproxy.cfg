global
        daemon

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000

frontend local
    bind *:80
    bind *:443 ssl crt /cert.pem  # ssl cert goes here 
    #redirect scheme https if !{ ssl_fc } # redirect to ssl 
    mode http
    acl PATH_api path_beg -i /socket.io
    acl PATH_static path_beg -i /
    use_backend api if PATH_api
    use_backend static if PATH_static

backend api
    mode http
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    # getting a page from the socketio server will result in a 404, so expect that result when 
    # doing a health check
    http-check expect status 404
    # we're using sticky sessions so that each client is connected to the same backend
    # instance. This is required by socketio 
    # https://python-socketio.readthedocs.io/en/latest/server.html#scalability-notes
    # note that there are by default two instances, but this can be scaled up as needed 
    cookie SERVERID insert indirect nocache
    server app01 127.0.0.1:5000 check cookie app01
    server app02 127.0.0.1:5001 check cookie app02
    # add more server instances here (up to 12 total)

backend static 
    mode http
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    server static01 127.0.0.1:3000 check 

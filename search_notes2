We have the followwing types of search:
- keyword
- tag
Each of these two have a scope:
- in-discussion or not
- in-saved or not

Because the scopes are limited and well-defined, each of these should 
have their own search index.

The discussion object should have a history of post ids.
Each post and block should keep the discussion id.
Users can have a set of the ids of the discussions they are in.

There probably should no longer be plural get functions.  Instead, specialized
searches with scope should be used instead.

For scope, one can retrieve the posts/blocks associated with it and
perhaps intersect it with the elements retrieved in the types.
Or, for each scope, it has its own type index.

Or, if the scope is relatively small, it can be processed by the keyword/tag
right then and there.

The keyword or tag functionality is mostly for unbounded scope.
*** If the discussion or saved should exceed some limit, it should probably
also be given its own indexing.  Or, it could have a cache of keywords/tags
commonly used (later).

STEPS:
X1. Implement discussion abstraction. Have scope gets (all, discussion, saved).
2. Implement filtering for discussion/saved scope on the keywords/tags.
3. Input to main search algorithm.
